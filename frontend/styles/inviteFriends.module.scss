$main-color: linear-gradient(
    238.55deg,
    rgba(244, 114, 182, 0.75) 15.98%,
    rgba(145, 153, 217, 0.75) 55.85%,
    rgba(56, 189, 248, 0.75) 84.59%
  ),
  linear-gradient(134.36deg, #f472b6 15.23%, #9797d7 49.79%, #38bdf8 84.77%);

.btn {
  background: $main-color;
}

.nav_bar {
  width: 100vw;
  height: 15.385vw;
}

.albumText {
  text-shadow: 0px 0px 10px black;
}

@keyframes slider {
  from {
    transform: translateY(0px);
  }
  to {
    transform: translateY(80px);
  }
}

@keyframes reverseSlider {
  from {
    transform: translateY(80px);
  }
  to {
    transform: translateY(0px);
  }
}

@keyframes iconSlider {
  from {
    width: 0%;
  }
  to {
    width: 100%;
  }
}

@keyframes smoothAppear {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes smoothDisappear {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

// animation : 띄어쓰기로 쭉 나열하면 아래의 속성들을 한 번에 지정할 수 있음
// animation-name : 애니메이션의 중간 상태를 지정하는 이름.  @keyframes 블록에 작성
// animation-duration : 한 싸이클의 애니메이션이 재생될 시간 지정
// animation-delay : 애니메이션의 시작을 지연시킬 시간 지정
// animation-direction : 애니메이션 재생 방향을 지정
// animation-iteration-count : 애니메이션이 몇 번 반복될지 지정
// animation-play-state : 애니메이션을 재생 상태. 멈추거나 다시 재생 시킬 수 있음
// animation-timing-function : 중간 상태들의 전환을 어떤 시간간격으로 진행할지 지정
// animation-fill-mode : 애니메이션이 재생 전 후의 상태 지정

.appearFriendDiv {
  animation: slider 0.5s ease-in-out 0s 1 normal forwards;
}

.disappearFriendDiv {
  animation: reverseSlider 0.5s ease-in-out 0s 1 normal forwards;
}

.appearIconDiv {
  animation: iconSlider 0.5s ease-out 0s 1 normal forwards;
}

.appearIcon {
  opacity: 0;
  animation: smoothAppear 0.5s ease-in-out 0s 1 normal forwards;
}

.disappearIcon {
  animation: smoothDisappear 0.2s ease-in-out 0s 1 normal forwards;
}
